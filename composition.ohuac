mod composition;

use sf ohua::sql::query::{group_by};
use sf crate::state::ohua::sum::{ Sum, add, get_sum };
use sf crate::state::ohua::count::{ Count, increment, get_value };


//# declare-field user_id : i32
//# declare-field a_field : i32

fn sum(field: Field<i32> , rows : RowStream) {
   let acc = Sum::new();
   for r in rows {
       acc.add(field(r));
   };
   acc.get_sum()
}

fn count(rows : RowStream) {
   let acc = Count::new();
   for r in rows {
       acc.increment();
   };
   acc.get_value()
}

fn composition(rows : RowStream<i32>) {

   for g in group_by(0, rows) {
       ( count(g)
       , sum(a_field, g)
       )
   }
}